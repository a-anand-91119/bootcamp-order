services:
  postgres:
    image: postgres:17-alpine
    container_name: bootcamp-postgres
    hostname: postgres
    environment:
      POSTGRES_DB: oms_bootcamp
      POSTGRES_USER: foobar
      POSTGRES_PASSWORD: foobar
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bootcamp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U foobar -d oms_bootcamp"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7-jammy
    container_name: bootcamp-mongodb
    hostname: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: foobar
      MONGO_INITDB_ROOT_PASSWORD: foobar
      MONGO_INITDB_DATABASE: oms_bootcamp
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./dependencies/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - bootcamp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka:
    image: apache/kafka:3.8.1
    container_name: bootcamp-kafka
    hostname: kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,PLAINTEXT_INTERNAL://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - bootcamp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  schema-registry:
    image: confluentinc/cp-schema-registry:7.7.0
    container_name: bootcamp-schema-registry
    hostname: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081,http://localhost:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9094
      SCHEMA_REGISTRY_DEBUG: 'true'
    networks:
      - bootcamp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8081/subjects"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: bootcamp-kafka-ui
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "9095:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: true
      KAFKA_CLUSTERS_0_NAME: bootcamp-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9094
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    volumes:
      - ./dependencies/kafka_ui_config.yml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - bootcamp-network
    restart: unless-stopped

  bootcamp-order:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bootcamp-order-app
    hostname: bootcamp-order
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/oms_bootcamp
      SPRING_DATASOURCE_USERNAME: foobar
      SPRING_DATASOURCE_PASSWORD: foobar
      
      SPRING_DATA_MONGODB_URI: mongodb://foobar:foobar@mongodb:27017/oms_bootcamp
      
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9094
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      APP_KAFKA_AVRO_BOOTSTRAP_SERVERS: kafka:9094
      APP_KAFKA_AVRO_PROPERTIES_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      APP_KAFKA_JSON_BOOTSTRAP_SERVERS: kafka:9094

      SPRING_PROFILES_ACTIVE: docker
      JAVA_OPTS: -Xms512m -Xmx1024m -XX:+UseG1GC -XX:MaxGCPauseMillis=100
    networks:
      - bootcamp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  kafka_data:
    driver: local

networks:
  bootcamp-network:
    driver: bridge
    name: bootcamp-network
